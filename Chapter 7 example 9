#load the data and save to a variable
data
library(ggplot2)
cat("a,\n")
ggplot(data,aes(x=X1))+geom_histogram(color="black",fill="blue")+labs(x="Cancer mortality")
cat("b\n")
pop_mean=mean(data$X1)
pop_mean
pop_total=sum(data$X1)
pop_total
pop_var=var(data$X1)
pop_var
pop_sd=sqrt(pop_var)
pop_sd
cat("c,\n")
n=25
N=nrow(data)
sample_means=replicate(N,{mean(sample(data$X1,size=n,replace=F))})
hist=data.frame(sample_means=sample_means)
ggplot(hist,aes(x=sample_means))+geom_histogram(aes(y=..density..),fill="blue",color="black")+
  geom_density(color="darkblue")+labs(x="Sample mean",y="Density")
cat("d,\n")
set.seed(12)
sample=sample(data$X1,size=n,replace = F)
sample
sample_mean=mean(sample)
sample_mean
sample_total=300*sample_mean
sample_total
cat("e,\n")
s2=sum((sample-sample_mean)^2)/(length(sample-1))
cat("So s^2 =",s2,"\n")
sample_variance=s2
sample_variance
sample_sd=sqrt(sample_variance)
sample_sd
cat("f,\n")
CILm=sample_mean-1.96*sqrt(s2/n*(1-n/300))
CIUm=sample_mean+1.96*sqrt(s2/n*(1-n/300))
cat("Confidence interval for mean (",CILm,",",CIUm,")","\n")
mean_error=sqrt(s2/n*(1-n/300))
CILt=sample_total-1.96*(300*mean_error)
CIUt=sample_total+1.96*(300*mean_error)
cat("Confidence interval for total (",CILt,",",CIUt,")","\n")
cat("Both population parameters are in the respective intervals.")

cat("g,\n")
set.seed(12)
sample2=sample(data$X1,size=100,replace = F)
sample2
sample_mean2=mean(sample2)
sample_mean2
sample_total2=300*sample_mean2
sample_total2
s22=sum((sample2-sample_mean2)^2)/(length(sample2-1))

cat("So s^2 =",s22,"\n")
sample_variance2=s22
sample_variance2
sample_sd2=sqrt(sample_variance2)
sample_sd2
#For 95% interval
CILm2=sample_mean2-1.96*sqrt(s22/100*(1-100/300))
CIUm2=sample_mean2+1.96*sqrt(s22/100*(1-100/300))
cat("Confidence interval for mean (",CILm2,",",CIUm2,")","\n")
mean_error2=sqrt(s22/100*(1-100/300))
CILt2=sample_total2-1.96*(300*mean_error2)
CIUt2=sample_total2+1.96*(300*mean_error2)
cat("Confidence interval for total (",CILt2,",",CIUt2,")","\n")
cat("Both parameters are within the respctive confidence intervals.")
cat("l,\n")
#asked claude to help
sorted_data=data[order(data$X445),]

N=nrow(data)
strata_size=ceiling(N/4)
strata1=sorted_data[1:strata_size,]
strata2=sorted_data[(1+strata_size):(2*strata_size),]
strata3=sorted_data[(1+2*strata_size):(3*strata_size),]
strata4=sorted_data[(1+3*strata_size):(4*strata_size),]
set.seed(123)
sample_s1=strata1[sample(nrow(strata1),6),]
sample_s2=strata2[sample(nrow(strata2),6),]
sample_s3=strata3[sample(nrow(strata3),6),]
sample_s4=strata4[sample(nrow(strata4),6),]
#means
mean_s1=mean(sample_s1$X1)
mean_s2=mean(sample_s2$X1)
mean_s3=mean(sample_s3$X1)
mean_s4=mean(sample_s4$X1)
N1=nrow(strata1)
N2=nrow(strata2)
N3=nrow(strata3)
N4=nrow(strata4)
N=N1+N2+N3+N4
stratified_mean=(N1/N)*mean_s1+(N2/N)*mean_s2+(N3/N)*mean_s3+(N4/N)*mean_s4
stratified_mean
stratified_total=N*stratified_mean
stratified_total
cat("m\n")
n_total=4*6
prop_n1=round((N1/N)*n_total)
prop_n2=round((N2/N)*n_total)
prop_n3=round((N3/N)*n_total)
prop_n4=round((N4/N)*n_total)
cat("Proportional allocation:\n")
cat("Stratum 1:", prop_n1, "/", N1, "=", prop_n1/N1, "\n")
cat("Stratum 2:", prop_n2, "/", N2, "=", prop_n2/N2, "\n")
cat("Stratum 3:", prop_n3, "/", N3, "=", prop_n3/N3, "\n")
cat("Stratum 4:", prop_n4, "/", N4, "=", prop_n4/N4, "\n")

sd_strata1=sd(strata1$X1)
sd_strata2=sd(strata2$X1)
sd_strata3=sd(strata3$X1)
sd_strata4=sd(strata4$X1)

numerator=c(N1*sd_strata1,N2*sd_strata2,N3*sd_strata3,N4*sd_strata4)
denominator=sum(numerator)
opt_fractions=numerator/denominator
opt_n=round(opt_fractions*n_total)

cat("Optimal allocation:\n")
cat("Stratum 1:", opt_n[1], "/", N1, "=", opt_n[1]/N1, "\n")
cat("Stratum 2:", opt_n[2], "/", N2, "=", opt_n[2]/N2, "\n")
cat("Stratum 3:", opt_n[3], "/", N3, "=", opt_n[3]/N3, "\n")
cat("Stratum 4:", opt_n[4], "/", N4, "=", opt_n[4]/N4, "\n")

var_srs=var(data$X1)*(1-n_total/N)/n_total

var_prop=(N1/N)^2 * var(strata1$X1) * (1 - prop_n1/N1) / prop_n1 +
  (N2/N)^2 * var(strata2$X1) * (1 - prop_n2/N2) / prop_n2 +
  (N3/N)^2 * var(strata3$X1) * (1 - prop_n3/N3) / prop_n3 +
  (N4/N)^2 * var(strata4$X1) * (1 - prop_n4/N4) / prop_n4
var_opt=(N1/N)^2 * var(strata1$X1) * (1 - opt_n[1]/N1) / opt_n[1] +
  (N2/N)^2 * var(strata2$X1) * (1 - opt_n[2]/N2) / opt_n[2] +
  (N3/N)^2 * var(strata3$X1) * (1 - opt_n[3]/N3) / opt_n[3] +
  (N4/N)^2 * var(strata4$X1) * (1 - opt_n[4]/N4) / opt_n[4]

cat("Variance comparison:\n")
cat("Simple random sampling:", var_srs, "\n")
cat("Proportional allocation:", var_prop, "\n")
cat("Optimal allocation:", var_opt, "\n")


